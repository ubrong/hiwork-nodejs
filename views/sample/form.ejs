<!DOCTYPE html>
<html lang="zh">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>表单-注册</title>
  <style>
    body{
      max-width: 680px;
      margin:0 auto;
    }

    thead{
      background-color: #888;
      color:#fff;
    }

    tbody tr:nth-child(even){
      background-color: #EEE;
    }
  </style>
</head>
<body>
<div id="page">

  <h3>hw-用户列表操作案例 ：</h3>
  <div>
    <button @click="isShowAddform=!isShowAddform">{{addBtnText}}</button>
  </div>
  <br>


  <table width="100%" border="1" cellpadding="5"  rules="groups">
    <thead>
      <tr>
        <td>ID</td>
        <td>用户名</td>
        <td>密码</td>
        <td>操作</td>
      </tr>
    </thead>
    <tbody>
      <tr v-for="(obj, i) in rows" :key="i">
        <td>{{obj.id}}</td>
        <td>{{obj.email}}</td>
        <td>{{obj.phone}}</td>
        <td>
          <button @click="select(i)">编辑</button>
          <button @click="del(obj.id)">删除</button>
        </td>
      </tr>
    </tbody>
  </table>
  

  <div v-show="isShowAddform">
    <h3>添加用户</h3>
    <addupdateform :row="newRow"></addupdateform>
    <button type="button" @click="add">新增</button>  
  </div>

  <div v-show="editIndex>-1">
    <h3>更新用户信息:</h3>
    <addupdateform :row="edtrow"></addupdateform>
    <button type="button" @click="update">提交更改</button>

  </div>

</div>
<script src="/-js/vue.3.2.31.js"></script>
<script src="/-js/axios.min.js"></script>
<script type="text/x-template" id="rowForm">
  <div id="form" :row="row">

    <div v-show="row.id>0">
      id:
      <input disabled  v-model="row.id" type="text"><br/>
    </div>

    邮箱：
    <input v-model="row.email" type="text"><br/>

    手机：
    <input v-model="row.phone" type="text"><br/>

    密码：
    <input v-model="row.password" type="text"><br/>


  </div>
</script>
<script>

const newRowDefault = {
  email: "a@abc.com",
  password: "123",
  phone: 666,
}


const app = Vue.createApp({
  mounted(){
    setTimeout(()=>{
      this.list();
    }, 500);
    
  },
  data() {
    return {
      isShowAddform:false,//是否显示增加用户
      editIndex:-1,//编辑行的序号
      newRow:{
        email: "a@abc.com",
        password: "123",
        phone: 666,
      },
      edtrow:{
        id:-1,
        email: "",
        password: "",
        phone: 0,
      },
      rows:[],
    }
  },
  computed:{
    addBtnText(){
      return (this.isShowAddform ? '关闭->'  : '开启->') +'添加用户';
    }
  },
  methods:{

    // 更新一行
    update(){
      axios({
        method:"put",
        url:"./update",
        data:this.edtrow,
      })
      .then(r=>{
        if(r.data.code>0){
          alert("更新成功");
          for(let k in this.edtrow){
            this.rows[this.editIndex][k] = this.edtrow[k];
          }

          this.editIndex = -1;
        }
        else{
          alert(r.data.msg);
        }
      })
      .catch(e=>{
        console.log(e);
        alert(e.response.data.msg);
      });

    },

    // 选择一行
    select(index){
      // this.edtrow = this.rows[index];
      for(let k in this.edtrow){
        // console.log(k, this.rows[index][k]);
        this.edtrow[k] = this.rows[index][k];
      }

      this.editIndex = index;
    },

    // 列表
    list(){
      axios({
        method:"get",
        url:"./list",
      })
      .then(r=>{
        console.log(r);
        if(r.data.code>0){
          this.rows = r.data.data;
        }
        else{
          alert(r.data.msg);
        }

        
      })
      .catch(e=>{
        console.log(e.response.data);
        alert(e.response.data.msg);
      });
    },

    del(id){
      if(confirm("确定要删除："+id)==false) return;

      axios({
        method:"delete",
        url:"./del/"+id,
      })
      .then(r=>{
        this.list();
      })
      .catch(e=>{
        console.log(e.response.data);
        alert(e.response.data.msg);
      });
    },


    // 新增
    add(){
      console.log('提交表单');
      axios({
        method:"post",
        url:"./add",
        data:this.newRow
      })
      .then(r=>{
        console.log(r);
        if(r.data.code<1){
          alert(r.data.msg);
        }
        else{
          alert('创建成功');
          this.newRow = {...newRowDefault};
          this.isShowAddform=false;

          this.list();
        }
      })
      .catch(e=>{
        console.log(e.response.data);
        alert(e.response.data.msg);
      });
    }
  }
});


// 定义一个名为 button-counter 的新全局组件
app.component('addupdateform', {
  template: "#rowForm",
  props:['row'],
})

const vm = app.mount('#page')

</script>


</body>
</html>